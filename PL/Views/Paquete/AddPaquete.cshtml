@model ML.Paquete
@{
    ViewBag.Title = "AddPaquete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    #map {
        height: 400px;
        width: 100%;
    }
</style>


<div class="text-lg-start">
    <h2>Paquete</h2>
    <h5>Ingrese los datos del Paquete</h5>
</div>

<hr />
@using (Html.BeginForm("AddPaquete", "Paquete", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


    <div class="container text-center">
        <div class="row align-items-start">


            <div class="col">
                <div class="col-md-6">
                    @Html.LabelFor(model => Model.Detalle, new { @class = "hidden" })
                    @Html.TextBoxFor(model => Model.Detalle, new { @class = "form-control hidden" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => Model.Peso, new { @class = "hidden" })
                    @Html.TextBoxFor(model => Model.Peso, new { @class = "form-control hidden" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => Model.Correo, new { @class = "hidden" })
                    @Html.TextBoxFor(model => Model.Correo, new { @class = "form-control hidden" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => Model.Telefono, new { @class = "hidden" })
                    @Html.TextBoxFor(model => Model.Telefono, new { @class = "form-control hidden" })
                </div>

            </div>


            <div class="col">
                <div class="col-md-6">
                    @Html.LabelFor(model => Model.DirrecionEntrega, new { @class = "hidden" })
                    @Html.TextBoxFor(model => Model.DirrecionEntrega, new { @class = "form-control hidden mb-3", @id = "txtEntrega", @onClick = "showEntrega()" })
                    <button type="button" class="btn btn-outline-warning mb-3" style="display: none;" id="btnEntrega" onclick="btnE()"><i class="bi bi-pencil"></i></button>

                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => Model.DirrecionOrigen, new { @class = "hidden" })
                    @Html.TextBoxFor(model => Model.DirrecionOrigen, new { @class = "form-control hidden mb-3", @id = "txtOrigen", @onClick = "showOrigen()" })
                    <button type="button" class="btn btn-outline-warning mb-3" style="display: none;" id="btnOrigen" onclick="btnO()"><i class="bi bi-pencil"></i></button>
                </div>
            </div>


        </div>
    </div>
    <div class="text-center">
        <button class="btn btn-success mb-3" type="submit"><i class="fa-solid fa-floppy-disk"></i> Confirmar Compra </button>

    </div>
    

}

@*Modla*@
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="modalClose()">×</button>
                <h4 class="modal-title">Direccion</h4>
            </div>

            <div class="modal-body">
                <div>
                    <div id="map"></div>

                </div>

            </div>


            <div class="modal-footer">
                <button type="button" class="btn btn-success m-1" id="btnUpdate" onclick="modalClose()">Guardar</button>
               
            </div>
        </div>
    </div>
</div>




@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">

    //MODALES

    function showEntrega() {
        showModal();
        var x = document.getElementById("btnEntrega");
        if (x.style.display === "none") {
            x.style.display = "block";
        } 
    }
    function showOrigen() {
        showModal();
        var x = document.getElementById("btnOrigen");
        if (x.style.display === "none") {
            x.style.display = "block";
        }
    }

    function showModal() {
        $('#modal').modal("show");
        
    }

    function modalClose() {
        $('#modal').modal("hide");
    }
    //botones
    function btnE() {
        $('#txtEntrega').val('');
       
        $('#modal').modal("show");

    }
    function btnO() {
        $('#txtOrigen').val('');
        $('#modal').modal("show");
    }

    function myFunction() {
       
    }




    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
        key: "AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw",
        v: "beta"
        // Add other bootstrap parameters as needed, using camel case.
        // Use the 'v' parameter to indicate the version to load (alpha, beta, weekly, etc.)
    });

    // Initialize and add the map
    let map;
    var marker;
    

    async function initMap() {
        // The location of Uluru
        const position = { lat: 19.430570307662446, lng: -99.16166352568936 };
        // Request needed libraries.

        const { Map } = await google.maps.importLibrary("maps");

        // The map, centered at Uluru
        map = new Map(document.getElementById("map"), {
            zoom: 13,
            center: position,
            mapId: "DEMO_MAP_ID",
        });

        // The marker, positioned at Uluru
        let infoWindow = new google.maps.InfoWindow({
            content: "Presiona la locacion",
            position: position,
        });
        infoWindow.open(map);

        var icone = {
            url: "https://cdn.icon-icons.com/icons2/690/PNG/512/24_Maps_icon-icons.com_61461.png", // url
            scaledSize: new google.maps.Size(80, 80), // scaled size
            origin: new google.maps.Point(0, 0), // origin
            anchor: new google.maps.Point(0, 0) // anchor
        };

        var icono = {
            url: "https://cdn.icon-icons.com/icons2/3783/PNG/512/navigation_map_maps_pin_icon_232077.png", // url
            scaledSize: new google.maps.Size(80, 80), // scaled size
            origin: new google.maps.Point(0, 0), // origin
            anchor: new google.maps.Point(0, 0) // anchor
        };


        //obtener la dirrecion
        google.maps.event.addListener(map, 'click', function (event) {
            
            infoWindow.close();
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({
                'latLng': event.latLng
            }, function (results, status) {
               
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        if ($('#txtEntrega').val() === "") {

                            if ($('#txtEntrega').val() === "") {
                            $("#txtEntrega").val(results[0].formatted_address);
                                marker = new google.maps.Marker({
                                    map: map,
                                    icon: icone,
                                    position: results[0].geometry.location
                                });
                                // To add the marker to the map, call set
                                    marker.setMap(map);
                            }
                        } else if ($('#txtEntrega').val() !== "") {
                                                $("#txtOrigen").val(results[0].formatted_address);
                                                marker = new google.maps.Marker({
                                                    map: map,
                                                    icon: icono,
                                                    position: results[0].geometry.location
                                                });
                                                // To add the marker to the map, call setMap();
                                                marker.setMap(null);
                                                marker.setMap(map);
                        }
                         else{
                            marker.setMap(null);    
                            }
   
                    }

                }
                

            });
            marker.setMap(null);
        })
        function codeAddress() {
            var address = document.getElementById('txtdirecion').value;
            geocoder.geocode({ '"txtdirecion': address }, function (results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }

    }
        initMap();
</script>
